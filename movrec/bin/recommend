#!/bin/bash
# recommend
# Stop on errors
# See https://vaneyckt.io/posts/safer_bash_scripts_with_set_euxo_pipefail/
set -Eeuo pipefail
# Sanity check command line options
usage() {
  echo "Usage: $0 (start|stop|reset|status)"
}
if [ $# -ne 1 ]; then
  usage
  exit 1
fi

start () {
	# Avoid clobbering an existing database
	if [ $(pgrep -f "flask --app recommend run --host 0.0.0.0 --port 9000") ] || [ $(pgrep -f "flask --app recommend run --host 0.0.0.0 --port 9001") ] || [ $(pgrep -f "flask --app recommend run --host 0.0.0.0 --port 9002") ]
	then
		echo "Error: recommend server is already running"
		exit 1
	fi
    mkdir -p var/log
    rm -f var/log/recommend.log
    flask --app recommend run --host 0.0.0.0 --port 9000 >> var/log/recommend.log 2>&1 &
}

stop () {
	pkill -f "flask --app recommend run --host 0.0.0.0 --port 9000" || true
}

restart () {
	# Equivalent to destroy then create
	stop
	start
}

status () {
    set +o pipefail
    NPROCS=$(pgrep -f "flask --app recommend run --host 0.0.0.0 --port 9000 " | wc -l)
    set -o pipefail
    if [ "$NPROCS" -eq 1 ]; then
        echo "recommend server running"
        exit
    elif [ "$NPROCS" -eq 0 ]; then
        echo "recommend server stopped"
        exit 1
    fi
}

# Parse argument.  $1 is the first argument
case $1 in
        "start")
            start
            ;;
        "stop")
            stop
            ;;
        "restart")
            restart
            ;;
        "status")
            status
            ;;
          *)
    usage
    exit 1
    ;;
esac